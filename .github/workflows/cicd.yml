name: GC_bank CICD 

on:
  push:
    branches: [ "main" ]

jobs:
  git_leaks:
    runs-on: gcbank_app
    steps:
    - uses: actions/checkout@v4
    - name: Gitleaks Installation
      run: sudo apt install gitleaks -y

    - name: Gitleaks Code Scan
      run: gitleaks detect source . -r gitleaks-report.json -f json
    
  compile:
    runs-on: gcbank_app
    needs: git_leaks
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Code Compile
      run: mvn compile

  unit_test:
    runs-on: gcbank_app
    needs: compile
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Unit Test Cases
      run: mvn test

  trivy_Scan:
    runs-on: gcbank_app
    needs: unit_test
    steps:
    - uses: actions/checkout@v4
    - name: Trivy Installation
      run: | 
        sudo apt-get install -y wget apt-transport-https gnupg lsb-release
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update -y
        sudo apt-get install -y trivy

    - name: Trivy FS scan
      run: trivy fs --format table -o fs-report.json .

  sonar_scan_and_quality_check:
    runs-on: gcbank_app
    needs: trivy_Scan
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - uses: actions/checkout@v4
      with:
        # Disabling shallow clones is recommended for improving the relevancy of reporting
        fetch-depth: 0
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v5.0.0 # Ex: v4.1.0, See the latest version at https://github.com/marketplace/actions/official-sonarqube-scan
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
          
    - name: SonarQube Quality Gate check
      id: sonarqube-quality-gate-check
      uses: sonarsource/sonarqube-quality-gate-action@master
      with:
        pollingTimeoutSec: 600
      env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}

  build_package:
    runs-on: gcbank_app
    needs: sonar_scan_and_quality_check
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build the Package
      run: mvn package
    - name: Upload JAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-jar
        path: target/*.jar 

  download_artifact_and_build_image:
    runs-on: gcbank_app
    needs: build_package
    steps:
    - uses: actions/checkout@v4
    - name: Download Jar artifact
      uses: actions/download-artifact@v4
      with:
        name: app-jar
        path: app  # this will download JAR to ./app folder

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        push: true
        context: ./
        tags: ravisree900/gc_bankapp:${{ github.run_number }}